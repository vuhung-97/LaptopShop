@model LaptopShop.Data.ThuongHieu

@{
    ViewData["Title"] = "Delete";
}

<h1 style="text-align:center">Bạn muốn xóa thông tin thương hiệu này?</h1>


<div class="container mt-4 d-flex justify-content-center">
    <div class="card shadow-sm ">
        <div class="card-body">
            <form asp-action="Delete" method="post" enctype="multipart/form-data">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <div class="">
                    <!-- Thông tin thương hiệu -->
                    <div class="">
                        <div class="form-group">
                            <label asp-for="IdThuongHieu" class="control-label">ID thương hiệu</label>
                            <input asp-for="IdThuongHieu" class="form-control" style="border-radius: 10px;" readonly />
                            <span asp-validation-for="IdThuongHieu" class="text-danger"></span>
                        </div>
                        <div class="form-group">
                            <label asp-for="TenThuongHieu" class="control-label">Tên thương hiệu</label>
                            <input asp-for="TenThuongHieu" class="form-control" style="border-radius: 10px;" readonly />
                            <span asp-validation-for="TenThuongHieu" class="text-danger"></span>
                        </div>
                        <label asp-for="Logo" class="control-label">Logo thương hiệu</label>
                        <div id="imagePreviewContainer" class=" p-2" style="max-height: 300px;">
                            @if (Model != null && !string.IsNullOrEmpty(Model.Logo))
                            {
                                <div class="image-wrapper position-relative d-inline-block">
                                    <img src="@Url.Content("~/hinh/thuonghieu/" + Model.Logo)" class="img-thumbnail img-clickable"
                                         style="width: 120px; height: 120px; object-fit: contain;"
                                         onclick="openImageModal('@Url.Content("~/hinh/thuonghieu/" + Model.Logo)')" />
                                </div>
                            }
                        </div>
                        <div class="text-center mt-4">
                            <!-- Nút Xóa thay vì submit trực tiếp -->
                            <button type="button" class="btn btn-round btn-danger" onclick="openConfirmDeleteModal(event)" style="box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Xóa</button>

                            <a asp-action="Index" class="btn btn-round btn-info" style="box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Quay lại</a>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal xem ảnh -->
<div id="imageModal" class="modal" onclick="closeImageModal()">
    <span class="close">&times;</span>
    <img class="modal-content" id="modalImage">
</div>
<!-- Modal xác nhận xóa -->
<div id="confirmDeleteModal" class="modalDelete">
    <div class="modalDelete-content">
        <span class="close" onclick="closeConfirmDeleteModal()">&times;</span>
        <h3>Bạn có chắc chắn muốn xóa thương hiệu này?</h3>

        <button type="button" class="modalDelete-button modalDelete-button-confirm" onclick="submitDelete()">Xóa</button>
        <button type="button" class="modalDelete-button modalDelete-button-cancel" onclick="closeConfirmDeleteModal()">Hủy</button>
       
    </div>
</div>


<style>
    .modal {
        display: none;
        position: fixed;
        z-index: 1000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.8);
        text-align: center;
    }

    .modal-content {
        max-width: 60%;
        max-height: 80%;
        object-fit: contain;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }

    .close {
        position: absolute;
        top: 20px;
        right: 30px;
        font-size: 40px;
        color: white;
        cursor: pointer;
    }

    .image-wrapper img {
        width: 120px;
        height: 120px;
        margin: 5px;
        object-fit: contain;
    }
   

    /* Modal xác nhận xóa */
    .modalDelete {
        display: none; /* Ẩn modal theo mặc định */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); /* Căn giữa modal cả chiều dọc và chiều ngang */
        z-index: 1000;
        width: 300px;
        padding: 20px;
        border-radius: 8px;
    }

    /* Nội dung modal */
    .modalDelete-content {
        background-color: #fff;
        padding: 20px;
        border-radius: 8px;
        text-align: center;
    }

    .modalDelete-button {
        padding: 10px 20px;
        margin: 10px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

    .modalDelete-button-confirm {
        background-color: red;
        color: white;
    }

    .modalDelete-button-cancel {
        background-color: gray;
        color: white;
    }
</style>

<script>
    function previewNewImages(event) {
        const files = event.target.files;
        const previewContainer = document.getElementById('imagePreviewContainer');
        previewContainer.innerHTML = ''; // Xoá ảnh cũ (nếu có)

        for (let i = 0; i < files.length; i++) {
            const reader = new FileReader();

            reader.onload = function (e) {
                const wrapper = document.createElement('div');
                wrapper.classList.add('image-wrapper', 'position-relative', 'd-inline-block');

                const img = document.createElement('img');
                img.src = e.target.result;
                img.className = 'img-thumbnail';
                img.style.width = '120px';
                img.style.height = '120px';
                img.style.objectFit = 'contain';
                img.onclick = () => openImageModal(e.target.result);

                wrapper.appendChild(img);
                previewContainer.appendChild(wrapper);
            };

            reader.readAsDataURL(files[i]);
        }
    }

    function openImageModal(imageSrc) {
        const modal = document.getElementById('imageModal');
        const modalImage = document.getElementById('modalImage');
        modal.style.display = 'block';
        modalImage.src = imageSrc;
    }

    function closeImageModal() {
        document.getElementById('imageModal').style.display = 'none';
    }

    function removeOldImage(button, filename) {
        const wrapper = button.closest('.image-wrapper');
        if (wrapper) wrapper.remove();

        const hiddenInput = document.createElement('input');
        hiddenInput.type = 'hidden';
        hiddenInput.name = 'XoaLogoCu';
        hiddenInput.value = filename;
        document.querySelector('form').appendChild(hiddenInput);
    }
    //modal xác nhận xóa
        // Mở modal xác nhận xóa
    function openConfirmDeleteModal(event) {
        event.preventDefault(); // Ngừng hành động mặc định của form
        document.getElementById('confirmDeleteModal').style.display = 'block';
    }

    // Đóng modal xác nhận xóa
    function closeConfirmDeleteModal() {
        document.getElementById('confirmDeleteModal').style.display = 'none';
    }

    // Thực hiện xóa khi xác nhận
    function submitDelete() {
        document.querySelector('form').submit();  // Submit form để xóa
        closeConfirmDeleteModal();  // Đóng modal
    }

</script>
